{"version":3,"sources":["images/avatar.svg","utils/serviceWorker.js","components/ChatHat.js","components/Chat.js","components/Messages.js","components/Profile.js","components/MainPage.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","ChatHat","useState","vis","setVis","list","className","to","htmlFor","type","id","onChange","value","onClick","onSearchBtnClick","searchInput","document","querySelector","style","visibility","Chat","storage","localStorage","getItem","children","chats","JSON","parse","length","child","setChild","useEffect","scrollTo","j","push","Fragment","key","date","Messages","Date","Name","text","time","sort","a","b","dateA","props","dateB","reverse","name","prompt","yourText","tmp","hour","getHours","min","getMinutes","message","author","chat","setItem","stringify","buildChat","useParams","messagesLen","len","setLen","ctx","getContext","width","height","lineWidth","strokeStyle","beginPath","moveTo","lineTo","arc","Math","PI","stroke","closePath","scrollHeight","Draw","placeholder","onKeyDown","event","input","keyCode","buildMessage","_onKeyPress","Profile","src","avatar","alt","history","createBrowserHistory","MainPage","path","component","Component","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2bd07656.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.706cfa3f.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n/* eslint no-console: 0 */\n/* eslint no-param-reassign: 0 */\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t\t),\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.',\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport '../styles/ChatHat.css'\n\nexport function ChatHat() {\n  const [vis, setVis] = useState(0)\n  const list = (\n    <ul className=\"list\">\n      <Link to=\"/profile\">\n        <div className=\"items\">Profile</div>\n      </Link>\n    </ul>\n  )\n\n  return (\n    <div className=\"hat\">\n      <div className=\"hatContainer\">\n        <label className=\"btn\" htmlFor=\"box\">\n          <input\n            type=\"checkbox\"\n            className=\"burgerCheckbox\"\n            id=\"box\"\n            onChange={() => {\n              setVis(vis + 1)\n            }}\n          />\n          <span />\n          {vis % 2 !== 0 && list}\n        </label>\n      </div>\n\n      <div className=\"Name\">\n        <h1>Messenger</h1>\n      </div>\n      <div className=\"searchInput\">\n        {' '}\n        <input type=\"text\" value=\"\" />{' '}\n      </div>\n      <button type=\"button\" className=\"search\" onClick={onSearchBtnClick}>\n        <div className=\"circle\"> </div>\n        <div className=\"handle\"> </div>\n      </button>\n    </div>\n  )\n}\n\nfunction onSearchBtnClick() {\n  const searchInput = document.querySelector('.searchInput > input')\n  if (searchInput.style.visibility === 'visible') {\n    searchInput.style.visibility = 'hidden'\n  } else {\n    searchInput.style.visibility = 'visible'\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport '../styles/Chat.css'\nimport { ChatHat } from './ChatHat'\n\nexport function Chat() {\n  // localStorage.clear()\n  const storage = localStorage.getItem('chats')\n  const children = []\n  let chats = []\n  if (storage) {\n    chats = JSON.parse(storage)\n  }\n  const [child, setChild] = useState(chats.length)\n  useEffect(() => window.scrollTo(0, 0))\n  if (chats) {\n    for (let j = 0; j < child; j += 1) {\n      children.push(\n        <React.Fragment key={j}>\n          <Link to={`/chats/${j}`}>\n            <button\n              type=\"button\"\n              className=\"chat\"\n              date={chats[j].Messages[chats[j].Messages.length - 1].Date}\n              value={j}\n            >\n              <div className=\"chatMainContainer\">\n                <div className=\"avatar\" />\n                <div className=\"chatContainer\">\n                  <div className=\"name\">{chats[j].Name}</div>\n                  <div className=\"lastMessage\">\n                    {chats[j].Messages ? chats[j].Messages[chats[j].Messages.length - 1].text : ''}\n                  </div>\n                </div>\n                <div className=\"chatContainer2\">\n                  <div className=\"mark\">\n                    <div className=\"mark-left\" />\n                    <div className=\"mark-right\" />\n                    <div className=\"mark-left2\" />\n                    <div className=\"mark-right2\" />\n                  </div>\n                  <div className=\"time\">\n                    {chats[j].Messages ? chats[j].Messages[chats[j].Messages.length - 1].time : ''}\n                  </div>\n                </div>\n              </div>\n            </button>\n          </Link>\n        </React.Fragment>,\n      )\n    }\n  }\n  function compare(a, b) {\n    const dateA = a.props.children.props.children.props.date\n    const dateB = b.props.children.props.children.props.date\n    if (dateA > dateB) {\n      return 1\n    }\n    if (dateA < dateB) {\n      return -1\n    }\n    return 0\n  }\n  return (\n    <React.Fragment key=\"Chat\">\n      <div className=\"screen\" />\n      <div className=\"form\">\n        <ChatHat />\n        <div className=\"chatList\">{children.sort(compare).reverse()}</div>\n        <button\n          type=\"button\"\n          className=\"create_btn_container\"\n          onClick={() => {\n            buildChat()\n            setChild(child + 1)\n          }}\n        >\n          <div className=\"btn_elem1\" />\n          <div className=\"btn_elem\" />\n          <div className=\"btn_elem2\" />\n          <div className=\"btn_elem3\" />\n        </button>\n      </div>\n    </React.Fragment>\n  )\n}\n\nfunction buildChat() {\n  // eslint-disable-next-line no-alert\n  let name = prompt('Введите название чата или имя контакта', 'User')\n  while (!name) {\n    // eslint-disable-next-line no-alert\n    name = prompt('Вы ничего не ввели! Введите название чата или имя контакта', 'User')\n  }\n  // eslint-disable-next-line no-alert\n  let yourText = prompt('Введите сообщение', 'Hello')\n  while (!yourText) {\n    // eslint-disable-next-line no-alert\n    yourText = prompt('Вы ничего не ввели! Введите название чата или имя контакта', 'User')\n  }\n  const chats = localStorage.getItem('chats')\n  let tmp = JSON.parse(chats)\n  const date = new Date()\n  const hour = date.getHours()\n  const min = date.getMinutes()\n  const message = {\n    author: 'You',\n    text: yourText,\n    time: `${hour}:${min}`,\n    Date: date,\n  }\n  const chat = {\n    Name: name,\n    Messages: [],\n  }\n  chat.Messages.push(message)\n  if (!chats) {\n    tmp = []\n  }\n  tmp.push(chat)\n  localStorage.setItem('chats', JSON.stringify(tmp))\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport '../styles/Messages.css'\n\nfunction Draw() {\n  const clip = document.querySelector('.inputClip')\n  const ctx = clip.getContext('2d')\n  ctx.width = '300px'\n  ctx.height = '200px'\n  ctx.lineWidth = 10\n  ctx.strokeStyle = '#777'\n  ctx.beginPath()\n  ctx.moveTo(100, 90)\n  ctx.lineTo(200, 90)\n  ctx.arc(200, 77.5, 12.5, -0.5 * Math.PI, 0.5 * Math.PI)\n  ctx.moveTo(200, 65)\n  ctx.lineTo(50, 65)\n  ctx.arc(50, 90, 25, 0.5 * Math.PI, 1.5 * Math.PI)\n  ctx.moveTo(50, 115)\n  ctx.lineTo(180, 115)\n  ctx.stroke()\n  ctx.closePath()\n  ctx.strokeStyle = '#fff'\n  ctx.beginPath()\n  ctx.moveTo(200, 85)\n  ctx.lineTo(200, 70)\n  ctx.moveTo(50, 110)\n  ctx.lineTo(50, 70)\n  ctx.stroke()\n  window.scrollTo(0, document.querySelector('.result').scrollHeight)\n}\n\nexport function Messages() {\n  const { id } = useParams()\n  const children = []\n  const storage = localStorage.getItem('chats')\n  const chats = JSON.parse(storage)\n  let messagesLen = 0\n  if (chats[id].Messages) {\n    messagesLen = chats[id].Messages.length\n  }\n  const [len, setLen] = useState(messagesLen)\n  function handleKeyDown(event) {\n    _onKeyPress(event)\n    setLen(len + 1)\n  }\n  useEffect(() => Draw())\n  for (let j = 0; j < messagesLen; j += 1) {\n    children.push(\n      <div className=\"message\">\n        <div className=\"messageText\">{chats[id].Messages[j].text}</div>\n        <div className=\"messageContainer\">\n          <div className=\"messageTime\">{chats[id].Messages[j].time}</div>\n          <div className=\"messagesMark\">\n            <div className=\"mark-left\" />\n            <div className=\"mark-right\" />\n            <div className=\"mark-left2\" />\n            <div className=\"mark-right2\" />\n          </div>\n        </div>\n      </div>,\n    )\n  }\n  return (\n    <React.Fragment key=\"Messages\">\n      <div className=\"screen\" />\n      <div className=\"top\">\n        <Link to=\"/\">\n          <button type=\"button\" className=\"backBtn\">\n            <div className=\"back_top\" />\n            <div className=\"back_middle\" />\n            <div className=\"back_bottom\" />\n          </button>{' '}\n        </Link>\n        <div className=\"bigContainer\">\n          <div className=\"messagesHatAvatar\"> </div>\n          <div className=\"messagesHatContainer\">\n            <div className=\"user\"> {chats[id].Name} </div>\n            <div className=\"online\"> Online</div>\n          </div>\n        </div>\n        <div className=\"messagesHatSearch\">\n          <div className=\"messagesHatCircle\"> </div>\n          <div className=\"messagesHatHandle\"> </div>\n        </div>\n        <div className=\"settings\">\n          <div className=\"settings_top\" />\n          <div className=\"settings_top\" />\n          <div className=\"settings_top\" />\n        </div>\n      </div>\n      <div className=\"result\">{children}</div>\n\n      <div className=\"inputContainer\">\n        <input\n          className=\"messageInput\"\n          id={id}\n          type=\"text\"\n          name=\"message-text\"\n          placeholder=\"Введите сообщение\"\n          onKeyDown={handleKeyDown}\n        />\n        <canvas className=\"inputClip\" />\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport function buildMessage(value, id) {\n  const storage = localStorage.getItem('chats')\n  const chats = JSON.parse(storage)\n  const date = new Date()\n  const hour = date.getHours()\n  const min = date.getMinutes()\n  const message = {\n    author: 'You',\n    text: value,\n    time: `${hour}:${min}`,\n    Date: date,\n  }\n  chats[id].Messages.push(message)\n  localStorage.setItem('chats', JSON.stringify(chats))\n}\n\nfunction _onKeyPress(event) {\n  const input = document.querySelector('.messageInput')\n  if (event.keyCode === 13 && input.value !== '') {\n    buildMessage(input.value, input.id)\n    input.value = ''\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport '../styles/Profile.css'\nimport avatar from '../images/avatar.svg'\n\nexport function Profile() {\n  return (\n    <React.Fragment key=\"Profile\">\n      <div className=\"screen\" />\n      <div className=\"profileHat\">\n        <Link to=\"/\">\n          <button className=\"profileBackBtn\" type=\"button\">\n            <div className=\"back_top\" />\n            <div className=\"back_middle\" />\n            <div className=\"back_bottom\" />\n          </button>\n        </Link>\n        <div className=\"profileName\">\n          <h1>Edit Profile</h1>\n        </div>\n        <button className=\"markBtn\" type=\"button\">\n          <div className=\"mark\">\n            <div className=\"profile-mark-left\" />\n            <div className=\"profile-mark-right\" />\n          </div>\n        </button>\n      </div>\n      <div className=\"profileContainer\">\n        <div className=\"profileAvatar\">\n          <img src={avatar} alt=\"\" />\n        </div>\n        <div className=\"fullNameContainer\">\n          <div className=\"profileExplain\">Full Name</div>\n          <input type=\"text\" className=\"profileInput\" id=\"fullName\" placeholder=\"Your full name\" />\n        </div>\n        <div className=\"usernameContainer\">\n          <div className=\"profileExplain\">Username</div>\n          <input type=\"text\" className=\"profileInput\" id=\"username\" placeholder=\"@username\" />\n        </div>\n        <div className=\"profileExplainInContainer\">Minumum length is 5 characters</div>\n        <div className=\"bioContainer\">\n          <div className=\"profileExplain\">Bio</div>\n          <textarea className=\"bio\" placeholder=\"Your bio\" />\n        </div>\n        <div className=\"profileExplainInContainer\">Any details about you</div>\n      </div>\n    </React.Fragment>\n  )\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nimport { Chat } from './Chat'\nimport { Messages } from './Messages'\nimport { Profile } from './Profile'\nimport '../styles/MainPage.css'\n\nexport const history = createBrowserHistory()\nclass MainPage extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/chats/:id\" component={Messages} />\n          <Route path=\"/\" component={Chat} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default MainPage\n","import React from 'react'\nimport { render } from 'react-dom'\n// import { Provider } from 'react-redux';\n// import store from './store';\n// import Routes from './routes';\nimport './styles/globalStyles.css'\nimport * as serviceWorker from './utils/serviceWorker'\nimport MainPage from './components/MainPage'\n\nrender(\n\t<MainPage/>,\n\tdocument.getElementById('root'),\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}